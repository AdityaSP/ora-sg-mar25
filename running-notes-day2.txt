root@dockertest:/home/vagrant# docker container ls
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
root@dockertest:/home/vagrant# docker container ls -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                      PORTS               NAMES
ee4e72625e60        mysql:5.7           "docker-entrypoint..."   29 minutes ago      Exited (0) 28 minutes ago                       vagrant_db_1
a28377a97bdc        ghost:1-alpine      "docker-entrypoint..."   29 minutes ago      Exited (0) 28 minutes ago                       vagrant_ghost_1
ca05c9cf47a3        al-ap:6             "/bin/sh -c 'httpd..."   16 hours ago        Exited (137) 16 hours ago                       gifted_lumiere
3db4e8833cdb        al-ap:5             "/bin/sh -c 'sh /b..."   16 hours ago        Exited (0) 16 hours ago                         relaxed_visvesvaraya
59bbe8bba2eb        al-ap:3             "/bin/sh -c 'ping ..."   17 hours ago        Exited (0) 17 hours ago                         confident_murdock
9aeb45ae69ee        al-ap:3             "/bin/sh -c 'ping ..."   17 hours ago        Exited (0) 17 hours ago                         nostalgic_meninsky
d899e9eb710a        069e52b49633        "/bin/sh"                17 hours ago        Exited (0) 17 hours ago                         lucid_cori
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# ps -ef | grep dockerd
root      1228     1  1 00:18 ?        00:00:43 /usr/bin/dockerd -H fd://
root      7626  1938  0 01:24 pts/0    00:00:00 grep --color=auto dockerd
root@dockertest:/home/vagrant# docker container ls
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
root@dockertest:/home/vagrant# docker container ls -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                      PORTS               NAMES
ee4e72625e60        mysql:5.7           "docker-entrypoint..."   31 minutes ago      Exited (0) 30 minutes ago                       vagrant_db_1
a28377a97bdc        ghost:1-alpine      "docker-entrypoint..."   31 minutes ago      Exited (0) 30 minutes ago                       vagrant_ghost_1
ca05c9cf47a3        al-ap:6             "/bin/sh -c 'httpd..."   16 hours ago        Exited (137) 16 hours ago                       gifted_lumiere
3db4e8833cdb        al-ap:5             "/bin/sh -c 'sh /b..."   16 hours ago        Exited (0) 16 hours ago                         relaxed_visvesvaraya
59bbe8bba2eb        al-ap:3             "/bin/sh -c 'ping ..."   17 hours ago        Exited (0) 17 hours ago                         confident_murdock
9aeb45ae69ee        al-ap:3             "/bin/sh -c 'ping ..."   17 hours ago        Exited (0) 17 hours ago                         nostalgic_meninsky
d899e9eb710a        069e52b49633        "/bin/sh"                17 hours ago        Exited (0) 17 hours ago                         lucid_cori
root@dockertest:/home/vagrant# docker container prune
WARNING! This will remove all stopped containers.
Are you sure you want to continue? [y/N] y
Deleted Containers:
ee4e72625e609e3576bc54a207a59c0812820fd8c0681a570122a6f02d5d5106
a28377a97bdc0e1397b01e13cd7ba3295ed586ede8454c72efaf212f49316b62
ca05c9cf47a3b81810e6cdb08d8a035bb09f55e6f9827070788fcc09588a477e
3db4e8833cdbf32494e20bf43881be4ebea59f86c2c8d225a4e59107b7f23b25
59bbe8bba2ebd06f178a681e05d0b60a846bcca51102d7126764f8294bdafe0c
9aeb45ae69eec14076150979b9c7a061dc2e0230feab6c797c5c6f8acbeaa66a
d899e9eb710ac57ab31f59b890480f6da92a1e94960079552f4a412d6f68f61d

Total reclaimed space: 956 B
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# docker container ls -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
root@dockertest:/home/vagrant# docker imag els
docker: 'imag' is not a docker command.
See 'docker --help'
root@dockertest:/home/vagrant# docker image ls
REPOSITORY                   TAG                 IMAGE ID            CREATED             SIZE
al-ap                        6                   c59084eb5c31        16 hours ago        10.8 MB
al-ap                        latest              c59084eb5c31        16 hours ago        10.8 MB
al-ap                        5                   691ea13758fb        16 hours ago        10.8 MB
al-ap                        4                   e746d709f855        17 hours ago        10.8 MB
al-ap                        3                   41a9fc45fa5d        17 hours ago        10.8 MB
al-ap                        2                   bc959fee2834        17 hours ago        10.8 MB
al-ap                        1                   069e52b49633        17 hours ago        10.8 MB
adityaprabhakara/mywebsite   2                   32c1f81631f8        18 hours ago        148 MB
adityaprabhakara/mywebsite   latest              5780686b1b22        19 hours ago        148 MB
ghost                        1-alpine            4e080fef0501        45 hours ago        268 MB
alpine                       latest              a187dde48cd2        2 days ago          5.6 MB
nginx                        latest              6678c7c2e56c        3 weeks ago         127 MB
mysql                        5.7                 84164b03fa2e        3 weeks ago         456 MB
root@dockertest:/home/vagrant# docker container run -d -p 9090:80 al-ap:6
e7da075eaaa03c5959bc90a21aba126294750552a75b62471ca50550529bc377
root@dockertest:/home/vagrant# docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES
e7da075eaaa0        al-ap:6             "/bin/sh -c 'httpd..."   5 seconds ago       Up 3 seconds        0.0.0.0:9090->80/tcp   goofy_ramanujan
root@dockertest:/home/vagrant# docker container logs e7da075eaaa0
AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 172.17.0.2. Set the 'ServerName' directive globally to suppress this message
root@dockertest:/home/vagrant# docker container exec e7da075eaaa0 ls /var/logs/apache2
ls: /var/logs/apache2: No such file or directory
root@dockertest:/home/vagrant# docker container exec e7da075eaaa0 ls /var/logs/apache
ls: /var/logs/apache: No such file or directory
root@dockertest:/home/vagrant# docker container exec e7da075eaaa0 ls /var/logs
ls: /var/logs: No such file or directory
root@dockertest:/home/vagrant# docker container exec e7da075eaaa0 ls /var/log
apache2
root@dockertest:/home/vagrant# docker container exec e7da075eaaa0 ls /var/log/apache2
access.log
error.log
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# docker container run -d -p 9091:80 -v /var/log/aproot@dockertest:/home/vagrant# docker container run -d -p 9091:80 -v /var/log/ap
e705aadd5c05987e8ef59d5f2c2d6c5ba3e418e5f776a951a0e1ed44f71f6474
root@dockertest:/home/vagrant# docker container exec e705aadd ls /var/log/apache
access.log
error.log
root@dockertest:/home/vagrant# docker container inspect e705aadd
[
    {
        "Id": "e705aadd5c05987e8ef59d5f2c2d6c5ba3e418e5f776a951a0e1ed44f71f6474"
        "Created": "2020-03-26T01:32:57.779315003Z",
        "Path": "/bin/sh",
        "Args": [
            "-c",
            "httpd -D FOREGROUND"
        ],
        "State": {
            "Status": "running",
            "Running": true,
            "Paused": false,
            "Restarting": false,
            "OOMKilled": false,
            "Dead": false,
            "Pid": 8007,
            "ExitCode": 0,
            "Error": "",
            "StartedAt": "2020-03-26T01:32:58.526630099Z",
            "FinishedAt": "0001-01-01T00:00:00Z"
        },
        "Image": "sha256:c59084eb5c31c0c582797f3e811c9ce4924c8896e61a05e01b49985
        "ResolvConfPath": "/var/lib/docker/containers/e705aadd5c05987e8ef59d5f2c
        "HostnamePath": "/var/lib/docker/containers/e705aadd5c05987e8ef59d5f2c2d
        "HostsPath": "/var/lib/docker/containers/e705aadd5c05987e8ef59d5f2c2d6c5
        "LogPath": "/var/lib/docker/containers/e705aadd5c05987e8ef59d5f2c2d6c5bae418e5f776a951a0e1ed44f71f6474-json.log",
        "Name": "/vigilant_minsky",
        "RestartCount": 0,
        "Driver": "aufs",
        "MountLabel": "",
        "ProcessLabel": "",
        "AppArmorProfile": "",
        "ExecIDs": null,
        "HostConfig": {
            "Binds": null,
            "ContainerIDFile": "",
            "LogConfig": {
                "Type": "json-file",
                "Config": {}
            },
            "NetworkMode": "default",
            "PortBindings": {
                "80/tcp": [
                    {
                        "HostIp": "",
                        "HostPort": "9091"
                    }
                ]
            },
            "RestartPolicy": {
                "Name": "no",
                "MaximumRetryCount": 0
            },
            "AutoRemove": false,
            "VolumeDriver": "",
            "VolumesFrom": null,
            "CapAdd": null,
            "CapDrop": null,
            "Dns": [],
            "DnsOptions": [],
            "DnsSearch": [],
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "",
            "Cgroup": "",
            "Links": null,
            "OomScoreAdj": 0,
            "PidMode": "",
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "SecurityOpt": null,
            "UTSMode": "",
            "UsernsMode": "",
            "ShmSize": 67108864,
            "Runtime": "runc",
            "ConsoleSize": [
                0,
                0
            ],
            "Isolation": "",
            "CpuShares": 0,
            "Memory": 0,
            "NanoCpus": 0,
            "CgroupParent": "",
            "BlkioWeight": 0,
            "BlkioWeightDevice": null,
            "BlkioDeviceReadBps": null,
            "BlkioDeviceWriteBps": null,
            "BlkioDeviceReadIOps": null,
            "BlkioDeviceWriteIOps": null,
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpuRealtimePeriod": 0,
            "CpuRealtimeRuntime": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "DiskQuota": 0,
            "KernelMemory": 0,
            "MemoryReservation": 0,
            "MemorySwap": 0,
            "MemorySwappiness": -1,
            "OomKillDisable": false,
            "PidsLimit": 0,
            "Ulimits": null,
            "CpuCount": 0,
            "CpuPercent": 0,
            "IOMaximumIOps": 0,
            "IOMaximumBandwidth": 0
        },
        "GraphDriver": {
            "Name": "aufs",
            "Data": null
        },
        "Mounts": [
            {
                "Type": "volume",
                "Name": "f205ffdf304cc2224ebd87e9525e664fa361d32ba6d72a67e1d6361
                "Source": "/var/lib/docker/volumes/f205ffdf304cc2224ebd87e9525e6
                "Destination": "/var/log/apache2",
                "Driver": "local",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            }
        ],
        "Config": {
            "Hostname": "e705aadd5c05",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "ExposedPorts": {
                "80/tcp": {}
            },
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/b
            ],
            "Cmd": [
                "/bin/sh",
                "-c",
                "httpd -D FOREGROUND"
            ],
            "ArgsEscaped": true,
            "Image": "al-ap:6",
            "Volumes": {
                "/var/log/apache2": {}
            },
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {}
        },
        "NetworkSettings": {
            "Bridge": "",
            "SandboxID": "bd68a204a6e9ed53df2c1e7c85e195d0172a03e53d8068efb0505c
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "Ports": {
                "80/tcp": [
                    {
                        "HostIp": "0.0.0.0",
                        "HostPort": "9091"
                    }
                ]
            },
            "SandboxKey": "/var/run/docker/netns/bd68a204a6e9",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "d89287b64972297f354cc1981645f9a3f0475616b2c2f202e07a2
            "Gateway": "172.17.0.1",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "172.17.0.3",
            "IPPrefixLen": 16,
            "IPv6Gateway": "",
            "MacAddress": "02:42:ac:11:00:03",
            "Networks": {
                "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "NetworkID": "55fb23da4021d17ac856a358fa7f11f88aef66e07627af
                    "EndpointID": "d89287b64972297f354cc1981645f9a3f0475616b2c2f
                    "Gateway": "172.17.0.1",
                    "IPAddress": "172.17.0.3",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "MacAddress": "02:42:ac:11:00:03"
                }
            }
        }
    }
]
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# cd /vagrant
root@dockertest:/vagrant# ls
docker-command-list.docx  docker-only-setup  dockers-slightedge.pdf  ~$rough-dia
root@dockertest:/vagrant# touch createdfromlinux.txt
root@dockertest:/vagrant# ls
createdfromlinux.txt      docker-only-setup       ~$rough-diag.pptx  setup.md
docker-command-list.docx  dockers-slightedge.pdf  rough-diag.pptx    swarm.pdf
root@dockertest:/vagrant# cd -
/home/vagrant
root@dockertest:/home/vagrant# cd createdfromlinux.txt      docker-only-setup
bash: cd: createdfromlinux.txt: No such file or directory
root@dockertest:/home/vagrant# docker-command-list.docx  dockers-slightedge.pdf
bash: docker-command-list.docx: command not found
root@dockertest:/home/vagrant# root@dockertest:/vagrant#
bash: root@dockertest:/vagrant#: No such file or directory
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# cd /var/lib/docker/volumes/f205ffdf304cc2224ebd87
root@dockertest:/var/lib/docker/volumes/f205ffdf304cc2224ebd87e9525e664fa361d32b
access.log  error.log
root@dockertest:/var/lib/docker/volumes/f205ffdf304cc2224ebd87e9525e664fa361d32b
/home/vagrant
root@dockertest:/home/vagrant# docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED
e705aadd5c05        al-ap:6             "/bin/sh -c 'httpd..."   5 minutes ago
e7da075eaaa0        al-ap:6             "/bin/sh -c 'httpd..."   11 minutes ago
root@dockertest:/home/vagrant# docker container rm -f e705aadd5c05 e7da075eaaa0
e705aadd5c05
e7da075eaaa0
root@dockertest:/home/vagrant# ls -ltar /var/lib/docker/volumes/f205ffdf304cc222
total 16
drwxr-xr-x 3 root root 4096 Mar 26 01:32 ..
drwxr-x--- 2 root uucp 4096 Mar 26 01:32 .
-rw-r--r-- 1 root root  405 Mar 26 01:32 error.log
-rw-r--r-- 1 root root  485 Mar 26 01:33 access.log
root@dockertest:/home/vagrant#     docker container run -d -p9091:80 -v /var/log
d326ab7d95e2345ec853e5ebb623ce5f6b3f553a3b8b234864e58d18290dc21e
root@dockertest:/home/vagrant# docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED
d326ab7d95e2        al-ap:6             "/bin/sh -c 'httpd..."   6 seconds ago
root@dockertest:/home/vagrant# docker container inspect d326ab7d95e2
[
    {
        "Id": "d326ab7d95e2345ec853e5ebb623ce5f6b3f553a3b8b234864e58d18290dc21e"
        "Created": "2020-03-26T01:39:46.575893324Z",
        "Path": "/bin/sh",
        "Args": [
            "-c",
            "httpd -D FOREGROUND"
        ],
        "State": {
            "Status": "running",
            "Running": true,
            "Paused": false,
            "Restarting": false,
            "OOMKilled": false,
            "Dead": false,
            "Pid": 8286,
            "ExitCode": 0,
            "Error": "",
            "StartedAt": "2020-03-26T01:39:47.336689335Z",
            "FinishedAt": "0001-01-01T00:00:00Z"
        },
        "Image": "sha256:c59084eb5c31c0c582797f3e811c9ce4924c8896e61a05e01b49985
        "ResolvConfPath": "/var/lib/docker/containers/d326ab7d95e2345ec853e5ebb6
        "HostnamePath": "/var/lib/docker/containers/d326ab7d95e2345ec853e5ebb623
        "HostsPath": "/var/lib/docker/containers/d326ab7d95e2345ec853e5ebb623ce5
        "LogPath": "/var/lib/docker/containers/d326ab7d95e2345ec853e5ebb623ce5f63f553a3b8b234864e58d18290dc21e-json.log",
        "Name": "/elated_leavitt",
        "RestartCount": 0,
        "Driver": "aufs",
        "MountLabel": "",
        "ProcessLabel": "",
        "AppArmorProfile": "",
        "ExecIDs": null,
        "HostConfig": {
            "Binds": null,
            "ContainerIDFile": "",
            "LogConfig": {
                "Type": "json-file",
                "Config": {}
            },
            "NetworkMode": "default",
            "PortBindings": {
                "80/tcp": [
                    {
                        "HostIp": "",
                        "HostPort": "9091"
                    }
                ]
            },
            "RestartPolicy": {
                "Name": "no",
                "MaximumRetryCount": 0
            },
            "AutoRemove": false,
            "VolumeDriver": "",
            "VolumesFrom": null,
            "CapAdd": null,
            "CapDrop": null,
            "Dns": [],
            "DnsOptions": [],
            "DnsSearch": [],
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "",
            "Cgroup": "",
            "Links": null,
            "OomScoreAdj": 0,
            "PidMode": "",
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "SecurityOpt": null,
            "UTSMode": "",
            "UsernsMode": "",
            "ShmSize": 67108864,
            "Runtime": "runc",
            "ConsoleSize": [
                0,
                0
            ],
            "Isolation": "",
            "CpuShares": 0,
            "Memory": 0,
            "NanoCpus": 0,
            "CgroupParent": "",
            "BlkioWeight": 0,
            "BlkioWeightDevice": null,
            "BlkioDeviceReadBps": null,
            "BlkioDeviceWriteBps": null,
            "BlkioDeviceReadIOps": null,
            "BlkioDeviceWriteIOps": null,
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpuRealtimePeriod": 0,
            "CpuRealtimeRuntime": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "DiskQuota": 0,
            "KernelMemory": 0,
            "MemoryReservation": 0,
            "MemorySwap": 0,
            "MemorySwappiness": -1,
            "OomKillDisable": false,
            "PidsLimit": 0,
            "Ulimits": null,
            "CpuCount": 0,
            "CpuPercent": 0,
            "IOMaximumIOps": 0,
            "IOMaximumBandwidth": 0
        },
        "GraphDriver": {
            "Name": "aufs",
            "Data": null
        },
        "Mounts": [
            {
                "Type": "volume",
                "Name": "b178777a8be4955569545dc0582636043a91b099a06fda3eb3a57f7
                "Source": "/var/lib/docker/volumes/b178777a8be4955569545dc058263
                "Destination": "/var/log/apache2",
                "Driver": "local",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            }
        ],
        "Config": {
            "Hostname": "d326ab7d95e2",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "ExposedPorts": {
                "80/tcp": {}
            },
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/b
            ],
            "Cmd": [
                "/bin/sh",
                "-c",
                "httpd -D FOREGROUND"
            ],
            "ArgsEscaped": true,
            "Image": "al-ap:6",
            "Volumes": {
                "/var/log/apache2": {}
            },
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {}
        },
        "NetworkSettings": {
            "Bridge": "",
            "SandboxID": "493ef7bf109843ea6905ae034a75cc5aace16c479ae332660c4fd7
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "Ports": {
                "80/tcp": [
                    {
                        "HostIp": "0.0.0.0",
                        "HostPort": "9091"
                    }
                ]
            },
            "SandboxKey": "/var/run/docker/netns/493ef7bf1098",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "3f5778ab9f6d6e6ebb4796db971787e23f1648fb51eb4b9149bd1
            "Gateway": "172.17.0.1",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "172.17.0.2",
            "IPPrefixLen": 16,
            "IPv6Gateway": "",
            "MacAddress": "02:42:ac:11:00:02",
            "Networks": {
                "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "NetworkID": "55fb23da4021d17ac856a358fa7f11f88aef66e07627af
                    "EndpointID": "3f5778ab9f6d6e6ebb4796db971787e23f1648fb51eb4
                    "Gateway": "172.17.0.1",
                    "IPAddress": "172.17.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "MacAddress": "02:42:ac:11:00:02"
                }
            }
        }
    }
]
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED
d326ab7d95e2        al-ap:6             "/bin/sh -c 'httpd..."   5 minutes ago
root@dockertest:/home/vagrant# docker container rm -f d326ab7d95e2
d326ab7d95e2
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# docker image pull mysql:5.7
5.7: Pulling from library/mysql
Digest: sha256:f4a5f5be3d94b4f4d3aef00fbc276ce7c08e62f2e1f28867d930deb73a314c58
Status: Image is up to date for mysql:5.7
root@dockertest:/home/vagrant# docker container run -d mysql:5.7
a312bbbf2fcaeb5b3f02f790b069176fe0ca611e542c2a49f7c934bf379dea57
root@dockertest:/home/vagrant# docker container ls
CONTAINER ID        IMAGE               COMMAND             CREATED
root@dockertest:/home/vagrant# docker container ls -a
CONTAINER ID        IMAGE               COMMAND                  CREATED
a312bbbf2fca        mysql:5.7           "docker-entrypoint..."   27 seconds ago _gates
root@dockertest:/home/vagrant# docker container logs a312bbbf2fca
2020-03-26 01:48:39+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Serve
2020-03-26 01:48:39+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysq
2020-03-26 01:48:39+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Serve
2020-03-26 01:48:39+00:00 [ERROR] [Entrypoint]: Database is uninitialized and pa
        You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_ALLOW_EMPTY_PASSWO
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# docker container run -d al-ap:6
85b267092af4b34106a71ec517022e24403e1f54b371131a00a5cad03d6bb607
root@dockertest:/home/vagrant# docker container exec 85b26709 env
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=85b267092af4
HOME=/root
root@dockertest:/home/vagrant# docker container run -d al-ap:6 env
ef70c5fb31f25e20e834c7cfe5f4fe07ee3e049599c387157b5b857709e15a41
root@dockertest:/home/vagrant# docker container run al-ap:6 env
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=f76889e34f51
HOME=/root
root@dockertest:/home/vagrant# docker container run -e MYVAR=hello -e MYVAR2=wha
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=bb456340fe29
MYVAR=hello
MYVAR2=what
HOME=/root
root@dockertest:/home/vagrant# docker container run -d -v projdb:/var/lib/mysql
818ed1aab7e5d14c3234ff57c8c3fc3cbcd77897337f90536b0115f1dd61f136
root@dockertest:/home/vagrant# docker container inspect 818ed1aab
[
    {
        "Id": "818ed1aab7e5d14c3234ff57c8c3fc3cbcd77897337f90536b0115f1dd61f136"
        "Created": "2020-03-26T01:55:49.720791276Z",
        "Path": "docker-entrypoint.sh",
        "Args": [
            "mysqld"
        ],
        "State": {
            "Status": "running",
            "Running": true,
            "Paused": false,
            "Restarting": false,
            "OOMKilled": false,
            "Dead": false,
            "Pid": 9211,
            "ExitCode": 0,
            "Error": "",
            "StartedAt": "2020-03-26T01:55:50.508724993Z",
            "FinishedAt": "0001-01-01T00:00:00Z"
        },
        "Image": "sha256:84164b03fa2ecb33e8b4c1f2636ec3286e90786819faa4d1c103ae1
        "ResolvConfPath": "/var/lib/docker/containers/818ed1aab7e5d14c3234ff57c8
        "HostnamePath": "/var/lib/docker/containers/818ed1aab7e5d14c3234ff57c8c3
        "HostsPath": "/var/lib/docker/containers/818ed1aab7e5d14c3234ff57c8c3fc3
        "LogPath": "/var/lib/docker/containers/818ed1aab7e5d14c3234ff57c8c3fc3cbd77897337f90536b0115f1dd61f136-json.log",
        "Name": "/jolly_fermat",
        "RestartCount": 0,
        "Driver": "aufs",
        "MountLabel": "",
        "ProcessLabel": "",
        "AppArmorProfile": "",
        "ExecIDs": null,
        "HostConfig": {
            "Binds": [
                "projdb:/var/lib/mysql"
            ],
            "ContainerIDFile": "",
            "LogConfig": {
                "Type": "json-file",
                "Config": {}
            },
            "NetworkMode": "default",
            "PortBindings": {},
            "RestartPolicy": {
                "Name": "no",
                "MaximumRetryCount": 0
            },
            "AutoRemove": false,
            "VolumeDriver": "",
            "VolumesFrom": null,
            "CapAdd": null,
            "CapDrop": null,
            "Dns": [],
            "DnsOptions": [],
            "DnsSearch": [],
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "",
            "Cgroup": "",
            "Links": null,
            "OomScoreAdj": 0,
            "PidMode": "",
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "SecurityOpt": null,
            "UTSMode": "",
            "UsernsMode": "",
            "ShmSize": 67108864,
            "Runtime": "runc",
            "ConsoleSize": [
                0,
                0
            ],
            "Isolation": "",
            "CpuShares": 0,
            "Memory": 0,
            "NanoCpus": 0,
            "CgroupParent": "",
            "BlkioWeight": 0,
            "BlkioWeightDevice": null,
            "BlkioDeviceReadBps": null,
            "BlkioDeviceWriteBps": null,
            "BlkioDeviceReadIOps": null,
            "BlkioDeviceWriteIOps": null,
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpuRealtimePeriod": 0,
            "CpuRealtimeRuntime": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "DiskQuota": 0,
            "KernelMemory": 0,
            "MemoryReservation": 0,
            "MemorySwap": 0,
            "MemorySwappiness": -1,
            "OomKillDisable": false,
            "PidsLimit": 0,
            "Ulimits": null,
            "CpuCount": 0,
            "CpuPercent": 0,
            "IOMaximumIOps": 0,
            "IOMaximumBandwidth": 0
        },
        "GraphDriver": {
            "Name": "aufs",
            "Data": null
        },
        "Mounts": [
            {
                "Type": "volume",
                "Name": "projdb",
                "Source": "/var/lib/docker/volumes/projdb/_data",
                "Destination": "/var/lib/mysql",
                "Driver": "local",
                "Mode": "z",
                "RW": true,
                "Propagation": ""
            }
        ],
        "Config": {
            "Hostname": "818ed1aab7e5",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "ExposedPorts": {
                "3306/tcp": {},
                "33060/tcp": {}
            },
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "MYSQL_ROOT_PASSWORD=welcome",
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/b
                "GOSU_VERSION=1.7",
                "MYSQL_MAJOR=5.7",
                "MYSQL_VERSION=5.7.29-1debian10"
            ],
            "Cmd": [
                "mysqld"
            ],
            "ArgsEscaped": true,
            "Image": "mysql:5.7",
            "Volumes": {
                "/var/lib/mysql": {}
            },
            "WorkingDir": "",
            "Entrypoint": [
                "docker-entrypoint.sh"
            ],
            "OnBuild": null,
            "Labels": {}
        },
        "NetworkSettings": {
            "Bridge": "",
            "SandboxID": "ba53054a9b33070f151df6961225b7a339041618d9dcd2a9dd10b4
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "Ports": {
                "3306/tcp": null,
                "33060/tcp": null
            },
            "SandboxKey": "/var/run/docker/netns/ba53054a9b33",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "f1cb9fa8d1f2b37a31a340253a60ca57b4417413a058e89d1e59b
            "Gateway": "172.17.0.1",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "172.17.0.3",
            "IPPrefixLen": 16,
            "IPv6Gateway": "",
            "MacAddress": "02:42:ac:11:00:03",
            "Networks": {
                "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "NetworkID": "55fb23da4021d17ac856a358fa7f11f88aef66e07627af
                    "EndpointID": "f1cb9fa8d1f2b37a31a340253a60ca57b4417413a058e
                    "Gateway": "172.17.0.1",
                    "IPAddress": "172.17.0.3",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "MacAddress": "02:42:ac:11:00:03"
                }
            }
        }
    }
]
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED
818ed1aab7e5        mysql:5.7           "docker-entrypoint..."   2 minutes ago
85b267092af4        al-ap:6             "/bin/sh -c 'httpd..."   7 minutes ago
root@dockertest:/home/vagrant# docker container exec -it 818ed1aab7e5 bash
root@818ed1aab7e5:/# mysql -uroot -pwelcome
mysql: [Warning] Using a password on the command line interface can be insecure.
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 2
Server version: 5.7.29 MySQL Community Server (GPL)

Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.00 sec)

mysql> create database mydb;
Query OK, 1 row affected (0.00 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mydb               |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)

mysql> exit
Bye
root@818ed1aab7e5:/# exit
exit
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED
818ed1aab7e5        mysql:5.7           "docker-entrypoint..."   4 minutes ago
85b267092af4        al-ap:6             "/bin/sh -c 'httpd..."   9 minutes ago
root@dockertest:/home/vagrant# docker container rm -f 818ed1aab7e5 85b267092af4
818ed1aab7e5
85b267092af4
root@dockertest:/home/vagrant# /var/lib/docker/volumes/projdb/_data
bash: /var/lib/docker/volumes/projdb/_data: Is a directory
root@dockertest:/home/vagrant# ls /var/lib/docker/volumes/projdb/_data
auto.cnf    ca.pem           client-key.pem  ibdata1      ib_logfile1  mydb   pe
ca-key.pem  client-cert.pem  ib_buffer_pool  ib_logfile0  ibtmp1       mysql  pr
root@dockertest:/home/vagrant# docker container run -d -v projdb:/var/lib/mysql
631515b38da4ac398b417f26b28bb7765ff0d989d18ddf1626e06fb01c665677
root@dockertest:/home/vagrant# docker container exec -it 631515b38 mysql -uroot
mysql: [Warning] Using a password on the command line interface can be insecure.
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 2
Server version: 5.7.29 MySQL Community Server (GPL)

Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mydb               |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)

mysql> exit
Bye
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# cd /tmp/data
bash: cd: /tmp/data: No such file or directory
root@dockertest:/home/vagrant# docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED
631515b38da4        mysql:5.7           "docker-entrypoint..."   4 minutes ago
root@dockertest:/home/vagrant# docker container rm -f 631515b38da4
631515b38da4
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# docker container run -d /tmp/serverlogs:/var/log/
docker: Error parsing reference: "/tmp/serverlogs:/var/log/apache2" is not a val
See 'docker run --help'.
root@dockertest:/home/vagrant# docker container run -d -v /tmp/serverlogs:/var/l
8d5e67c6178b86044905ce42da5d3a194c390966fd9b6f1d2581c68c5e1b3333
root@dockertest:/home/vagrant# ls -ltr /tmp/serverlogs
total 4
-rw-r--r-- 1 root root   0 Mar 26 02:06 access.log
-rw-r--r-- 1 root root 405 Mar 26 02:06 error.log
root@dockertest:/home/vagrant# docker container inspect 8d5e67c6
[
    {
        "Id": "8d5e67c6178b86044905ce42da5d3a194c390966fd9b6f1d2581c68c5e1b3333"
        "Created": "2020-03-26T02:06:43.224000824Z",
        "Path": "/bin/sh",
        "Args": [
            "-c",
            "httpd -D FOREGROUND"
        ],
        "State": {
            "Status": "running",
            "Running": true,
            "Paused": false,
            "Restarting": false,
            "OOMKilled": false,
            "Dead": false,
            "Pid": 9989,
            "ExitCode": 0,
            "Error": "",
            "StartedAt": "2020-03-26T02:06:44.002250203Z",
            "FinishedAt": "0001-01-01T00:00:00Z"
        },
        "Image": "sha256:c59084eb5c31c0c582797f3e811c9ce4924c8896e61a05e01b49985
        "ResolvConfPath": "/var/lib/docker/containers/8d5e67c6178b86044905ce42da
        "HostnamePath": "/var/lib/docker/containers/8d5e67c6178b86044905ce42da5d
        "HostsPath": "/var/lib/docker/containers/8d5e67c6178b86044905ce42da5d3a1
        "LogPath": "/var/lib/docker/containers/8d5e67c6178b86044905ce42da5d3a194390966fd9b6f1d2581c68c5e1b3333-json.log",
        "Name": "/nervous_roentgen",
        "RestartCount": 0,
        "Driver": "aufs",
        "MountLabel": "",
        "ProcessLabel": "",
        "AppArmorProfile": "",
        "ExecIDs": null,
        "HostConfig": {
            "Binds": [
                "/tmp/serverlogs:/var/log/apache2"
            ],
            "ContainerIDFile": "",
            "LogConfig": {
                "Type": "json-file",
                "Config": {}
            },
            "NetworkMode": "default",
            "PortBindings": {},
            "RestartPolicy": {
                "Name": "no",
                "MaximumRetryCount": 0
            },
            "AutoRemove": false,
            "VolumeDriver": "",
            "VolumesFrom": null,
            "CapAdd": null,
            "CapDrop": null,
            "Dns": [],
            "DnsOptions": [],
            "DnsSearch": [],
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "",
            "Cgroup": "",
            "Links": null,
            "OomScoreAdj": 0,
            "PidMode": "",
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "SecurityOpt": null,
            "UTSMode": "",
            "UsernsMode": "",
            "ShmSize": 67108864,
            "Runtime": "runc",
            "ConsoleSize": [
                0,
                0
            ],
            "Isolation": "",
            "CpuShares": 0,
            "Memory": 0,
            "NanoCpus": 0,
            "CgroupParent": "",
            "BlkioWeight": 0,
            "BlkioWeightDevice": null,
            "BlkioDeviceReadBps": null,
            "BlkioDeviceWriteBps": null,
            "BlkioDeviceReadIOps": null,
            "BlkioDeviceWriteIOps": null,
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpuRealtimePeriod": 0,
            "CpuRealtimeRuntime": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "DiskQuota": 0,
            "KernelMemory": 0,
            "MemoryReservation": 0,
            "MemorySwap": 0,
            "MemorySwappiness": -1,
            "OomKillDisable": false,
            "PidsLimit": 0,
            "Ulimits": null,
            "CpuCount": 0,
            "CpuPercent": 0,
            "IOMaximumIOps": 0,
            "IOMaximumBandwidth": 0
        },
        "GraphDriver": {
            "Name": "aufs",
            "Data": null
        },
        "Mounts": [
            {
                "Type": "bind",
                "Source": "/tmp/serverlogs",
                "Destination": "/var/log/apache2",
                "Mode": "",
                "RW": true,
                "Propagation": "rprivate"
            }
        ],
        "Config": {
            "Hostname": "8d5e67c6178b",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/b
            ],
            "Cmd": [
                "/bin/sh",
                "-c",
                "httpd -D FOREGROUND"
            ],
            "ArgsEscaped": true,
            "Image": "al-ap:6",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {}
        },
        "NetworkSettings": {
            "Bridge": "",
            "SandboxID": "511f3261d197f047b2be45356c628438e08139d2b4e5f3b94cb25d
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "Ports": {},
            "SandboxKey": "/var/run/docker/netns/511f3261d197",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "41d46edd6cbbe118cfe0b99849c6e3d39d3197ff2f75d461861de
            "Gateway": "172.17.0.1",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "172.17.0.2",
            "IPPrefixLen": 16,
            "IPv6Gateway": "",
            "MacAddress": "02:42:ac:11:00:02",
            "Networks": {
                "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "NetworkID": "55fb23da4021d17ac856a358fa7f11f88aef66e07627af
                    "EndpointID": "41d46edd6cbbe118cfe0b99849c6e3d39d3197ff2f75d
                    "Gateway": "172.17.0.1",
                    "IPAddress": "172.17.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "MacAddress": "02:42:ac:11:00:02"
                }
            }
        }
    }
]
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# ls
pinger  stack.yml
root@dockertest:/home/vagrant# cd pinger/
root@dockertest:/home/vagrant/pinger# ls
Dockerfile  index.html  myscript.sh
root@dockertest:/home/vagrant/pinger# cat Dockerfile
FROM alpine
RUN apk update && apk add apache2
COPY index.html /var/www/localhost/htdocs
CMD httpd -D FOREGROUND
#COPY myscript.sh /bin/myscript.sh
#CMD sh /bin/myscript.sh
root@dockertest:/home/vagrant/pinger# cd /vagrant/htmlfiles/
root@dockertest:/vagrant/htmlfiles# ls
index.html
root@dockertest:/vagrant/htmlfiles# cd -
/home/vagrant/pinger
root@dockertest:/home/vagrant/pinger# docker container run -d -p 9595:80 -v /vagrant/htmlfiles:/var/www/localhost/htdocs al-ap:6
83ffa2600466c06b028c095f75b89f04b5c4f487ea796b788366dc7f4df60625
root@dockertest:/home/vagrant/pinger# #docker container run -d -p 9595:80 -v /vagrant/htmlfiles:/var/www/localhost/htdocs al-ap:6
root@dockertest:/home/vagrant/pinger# cd /var/lib/docker/
root@dockertest:/var/lib/docker# ls
aufs  containers  image  network  plugins  swarm  tmp  trust  volumes
root@dockertest:/var/lib/docker# cd image
root@dockertest:/var/lib/docker/image# ls
aufs
root@dockertest:/var/lib/docker/image#












----------------------------------------------------------------------------------------------------------------------------------







root@dockertest:/var/lib/docker/image# docker container run -d --name w1 al-ap:6
fe59f5cce39737796fcd9ff7c326ed69bf6c5b8ce950952f21243f79787fbb50
root@dockertest:/var/lib/docker/image# docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
fe59f5cce397        al-ap:6             "/bin/sh -c 'httpd..."   6 seconds ago       Up 5 seconds                            w1
root@dockertest:/var/lib/docker/image# docker container run -d --name w2 al-ap:6
5bade59b87c1d71b3094042c817ec4288a5ffff14a0a710ff545c81d4a5cea3b
root@dockertest:/var/lib/docker/image# docker container run -d --name db al-ap:6
7c35300f68180d31274f57637d564b0b816607328b4fc06ed200967efe961355
root@dockertest:/var/lib/docker/image# docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
7c35300f6818        al-ap:6             "/bin/sh -c 'httpd..."   5 seconds ago       Up 4 seconds                            db
5bade59b87c1        al-ap:6             "/bin/sh -c 'httpd..."   8 seconds ago       Up 7 seconds                            w2
fe59f5cce397        al-ap:6             "/bin/sh -c 'httpd..."   22 seconds ago      Up 21 seconds                           w1
root@dockertest:/var/lib/docker/image# docker container inspect w1 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "172.17.0.2",
                    "IPAddress": "172.17.0.2",
root@dockertest:/var/lib/docker/image# docker container inspect w2 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "172.17.0.3",
                    "IPAddress": "172.17.0.3",
root@dockertest:/var/lib/docker/image# docker container inspect db | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "172.17.0.4",
                    "IPAddress": "172.17.0.4",
root@dockertest:/var/lib/docker/image# docker container exec w1 ping -c2 172.17.0.3
PING 172.17.0.3 (172.17.0.3): 56 data bytes
64 bytes from 172.17.0.3: seq=0 ttl=64 time=0.205 ms
64 bytes from 172.17.0.3: seq=1 ttl=64 time=0.112 ms

--- 172.17.0.3 ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.112/0.158/0.205 ms
root@dockertest:/var/lib/docker/image# docker container exec w1 ping -c2 172.17.0.4
PING 172.17.0.4 (172.17.0.4): 56 data bytes
64 bytes from 172.17.0.4: seq=0 ttl=64 time=0.195 ms
64 bytes from 172.17.0.4: seq=1 ttl=64 time=0.177 ms

--- 172.17.0.4 ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.177/0.186/0.195 ms
root@dockertest:/var/lib/docker/image# docker container inspect w1
[
    {
        "Id": "fe59f5cce39737796fcd9ff7c326ed69bf6c5b8ce950952f21243f79787fbb50",
        "Created": "2020-03-26T03:35:10.692333227Z",
        "Path": "/bin/sh",
        "Args": [
            "-c",
            "httpd -D FOREGROUND"
        ],
        "State": {
            "Status": "running",
            "Running": true,
            "Paused": false,
            "Restarting": false,
            "OOMKilled": false,
            "Dead": false,
            "Pid": 11326,
            "ExitCode": 0,
            "Error": "",
            "StartedAt": "2020-03-26T03:35:11.407458026Z",
            "FinishedAt": "0001-01-01T00:00:00Z"
        },
        "Image": "sha256:c59084eb5c31c0c582797f3e811c9ce4924c8896e61a05e01b49985d58bcf624",
        "ResolvConfPath": "/var/lib/docker/containers/fe59f5cce39737796fcd9ff7c326ed69bf6c5b8ce950952f21243f79787fbb50/resolv.conf",
        "HostnamePath": "/var/lib/docker/containers/fe59f5cce39737796fcd9ff7c326ed69bf6c5b8ce950952f21243f79787fbb50/hostname",
        "HostsPath": "/var/lib/docker/containers/fe59f5cce39737796fcd9ff7c326ed69bf6c5b8ce950952f21243f79787fbb50/hosts",
        "LogPath": "/var/lib/docker/containers/fe59f5cce39737796fcd9ff7c326ed69bf6c5b8ce950952f21243f79787fbb50/fe59f5cce39737796fcd9ff7c326ed69bf6c5b8ce950952f21243f79787fbb50-json.log",
        "Name": "/w1",
        "RestartCount": 0,
        "Driver": "aufs",
        "MountLabel": "",
        "ProcessLabel": "",
        "AppArmorProfile": "",
        "ExecIDs": null,
        "HostConfig": {
            "Binds": null,
            "ContainerIDFile": "",
            "LogConfig": {
                "Type": "json-file",
                "Config": {}
            },
            "NetworkMode": "default",
            "PortBindings": {},
            "RestartPolicy": {
                "Name": "no",
                "MaximumRetryCount": 0
            },
            "AutoRemove": false,
            "VolumeDriver": "",
            "VolumesFrom": null,
            "CapAdd": null,
            "CapDrop": null,
            "Dns": [],
            "DnsOptions": [],
            "DnsSearch": [],
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "",
            "Cgroup": "",
            "Links": null,
            "OomScoreAdj": 0,
            "PidMode": "",
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "SecurityOpt": null,
            "UTSMode": "",
            "UsernsMode": "",
            "ShmSize": 67108864,
            "Runtime": "runc",
            "ConsoleSize": [
                0,
                0
            ],
            "Isolation": "",
            "CpuShares": 0,
            "Memory": 0,
            "NanoCpus": 0,
            "CgroupParent": "",
            "BlkioWeight": 0,
            "BlkioWeightDevice": null,
            "BlkioDeviceReadBps": null,
            "BlkioDeviceWriteBps": null,
            "BlkioDeviceReadIOps": null,
            "BlkioDeviceWriteIOps": null,
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpuRealtimePeriod": 0,
            "CpuRealtimeRuntime": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "DiskQuota": 0,
            "KernelMemory": 0,
            "MemoryReservation": 0,
            "MemorySwap": 0,
            "MemorySwappiness": -1,
            "OomKillDisable": false,
            "PidsLimit": 0,
            "Ulimits": null,
            "CpuCount": 0,
            "CpuPercent": 0,
            "IOMaximumIOps": 0,
            "IOMaximumBandwidth": 0
        },
        "GraphDriver": {
            "Name": "aufs",
            "Data": null
        },
        "Mounts": [],
        "Config": {
            "Hostname": "fe59f5cce397",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            ],
            "Cmd": [
                "/bin/sh",
                "-c",
                "httpd -D FOREGROUND"
            ],
            "ArgsEscaped": true,
            "Image": "al-ap:6",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {}
        },
        "NetworkSettings": {
            "Bridge": "",
            "SandboxID": "e43ff9d813aeee9122c10bbb1d367ad237d47a5412918a3fd1e29e3f4b8f9079",
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "Ports": {},
            "SandboxKey": "/var/run/docker/netns/e43ff9d813ae",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "efc8e252382ebcc0f41a57834e4d2a49d9b5afa84abfbd152beae75856332812",
            "Gateway": "172.17.0.1",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "172.17.0.2",
            "IPPrefixLen": 16,
            "IPv6Gateway": "",
            "MacAddress": "02:42:ac:11:00:02",
            "Networks": {
                "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "NetworkID": "55fb23da4021d17ac856a358fa7f11f88aef66e07627af806292b606574781cb",
                    "EndpointID": "efc8e252382ebcc0f41a57834e4d2a49d9b5afa84abfbd152beae75856332812",
                    "Gateway": "172.17.0.1",
                    "IPAddress": "172.17.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "MacAddress": "02:42:ac:11:00:02"
                }
            }
        }
    }
]
root@dockertest:/var/lib/docker/image# docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
55fb23da4021        bridge              bridge              local
b2ce3f25e09d        docker_gwbridge     bridge              local
fdcc61c65ce5        host                host                local
aea69c2b699b        none                null                local
root@dockertest:/var/lib/docker/image# docker network inspect bridge
[
    {
        "Name": "bridge",
        "Id": "55fb23da4021d17ac856a358fa7f11f88aef66e07627af806292b606574781cb",
        "Created": "2020-03-26T00:18:54.651834491Z",
        "Scope": "local",
        "Driver": "bridge",
        "EnableIPv6": false,
        "IPAM": {
            "Driver": "default",
            "Options": null,
            "Config": [
                {
                    "Subnet": "172.17.0.0/16",
                    "Gateway": "172.17.0.1"
                }
            ]
        },
        "Internal": false,
        "Attachable": false,
        "Containers": {
            "5bade59b87c1d71b3094042c817ec4288a5ffff14a0a710ff545c81d4a5cea3b": {
                "Name": "w2",
                "EndpointID": "60961fd3b4e3044d3b1d28acf63c5622250a9b58fb34e4d8fb1dadc1262301a9",
                "MacAddress": "02:42:ac:11:00:03",
                "IPv4Address": "172.17.0.3/16",
                "IPv6Address": ""
            },
            "7c35300f68180d31274f57637d564b0b816607328b4fc06ed200967efe961355": {
                "Name": "db",
                "EndpointID": "ab711092371f4bf7f4e77d3e4b6496b3c77341c0dbd0f2607ca484baffffd78d",
                "MacAddress": "02:42:ac:11:00:04",
                "IPv4Address": "172.17.0.4/16",
                "IPv6Address": ""
            },
            "fe59f5cce39737796fcd9ff7c326ed69bf6c5b8ce950952f21243f79787fbb50": {
                "Name": "w1",
                "EndpointID": "efc8e252382ebcc0f41a57834e4d2a49d9b5afa84abfbd152beae75856332812",
                "MacAddress": "02:42:ac:11:00:02",
                "IPv4Address": "172.17.0.2/16",
                "IPv6Address": ""
            }
        },
        "Options": {
            "com.docker.network.bridge.default_bridge": "true",
            "com.docker.network.bridge.enable_icc": "true",
            "com.docker.network.bridge.enable_ip_masquerade": "true",
            "com.docker.network.bridge.host_binding_ipv4": "0.0.0.0",
            "com.docker.network.bridge.name": "docker0",
            "com.docker.network.driver.mtu": "1500"
        },
        "Labels": {}
    }
]
root@dockertest:/var/lib/docker/image#
root@dockertest:/var/lib/docker/image# docker container inspect w1
[
    {
        "Id": "fe59f5cce39737796fcd9ff7c326ed69bf6c5b8ce950952f21243f79787fbb50",
        "Created": "2020-03-26T03:35:10.692333227Z",
        "Path": "/bin/sh",
        "Args": [
            "-c",
            "httpd -D FOREGROUND"
        ],
        "State": {
            "Status": "running",
            "Running": true,
            "Paused": false,
            "Restarting": false,
            "OOMKilled": false,
            "Dead": false,
            "Pid": 11326,
            "ExitCode": 0,
            "Error": "",
            "StartedAt": "2020-03-26T03:35:11.407458026Z",
            "FinishedAt": "0001-01-01T00:00:00Z"
        },
        "Image": "sha256:c59084eb5c31c0c582797f3e811c9ce4924c8896e61a05e01b49985d58bcf624",
        "ResolvConfPath": "/var/lib/docker/containers/fe59f5cce39737796fcd9ff7c326ed69bf6c5b8ce950952f21243f79787fbb50/resolv.conf",
        "HostnamePath": "/var/lib/docker/containers/fe59f5cce39737796fcd9ff7c326ed69bf6c5b8ce950952f21243f79787fbb50/hostname",
        "HostsPath": "/var/lib/docker/containers/fe59f5cce39737796fcd9ff7c326ed69bf6c5b8ce950952f21243f79787fbb50/hosts",
        "LogPath": "/var/lib/docker/containers/fe59f5cce39737796fcd9ff7c326ed69bf6c5b8ce950952f21243f79787fbb50/fe59f5cce39737796fcd9ff7c326ed69bf6c5b8ce950952f21243f79787fbb50-json.log",
        "Name": "/w1",
        "RestartCount": 0,
        "Driver": "aufs",
        "MountLabel": "",
        "ProcessLabel": "",
        "AppArmorProfile": "",
        "ExecIDs": null,
        "HostConfig": {
            "Binds": null,
            "ContainerIDFile": "",
            "LogConfig": {
                "Type": "json-file",
                "Config": {}
            },
            "NetworkMode": "default",
            "PortBindings": {},
            "RestartPolicy": {
                "Name": "no",
                "MaximumRetryCount": 0
            },
            "AutoRemove": false,
            "VolumeDriver": "",
            "VolumesFrom": null,
            "CapAdd": null,
            "CapDrop": null,
            "Dns": [],
            "DnsOptions": [],
            "DnsSearch": [],
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "",
            "Cgroup": "",
            "Links": null,
            "OomScoreAdj": 0,
            "PidMode": "",
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "SecurityOpt": null,
            "UTSMode": "",
            "UsernsMode": "",
            "ShmSize": 67108864,
            "Runtime": "runc",
            "ConsoleSize": [
                0,
                0
            ],
            "Isolation": "",
            "CpuShares": 0,
            "Memory": 0,
            "NanoCpus": 0,
            "CgroupParent": "",
            "BlkioWeight": 0,
            "BlkioWeightDevice": null,
            "BlkioDeviceReadBps": null,
            "BlkioDeviceWriteBps": null,
            "BlkioDeviceReadIOps": null,
            "BlkioDeviceWriteIOps": null,
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpuRealtimePeriod": 0,
            "CpuRealtimeRuntime": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "DiskQuota": 0,
            "KernelMemory": 0,
            "MemoryReservation": 0,
            "MemorySwap": 0,
            "MemorySwappiness": -1,
            "OomKillDisable": false,
            "PidsLimit": 0,
            "Ulimits": null,
            "CpuCount": 0,
            "CpuPercent": 0,
            "IOMaximumIOps": 0,
            "IOMaximumBandwidth": 0
        },
        "GraphDriver": {
            "Name": "aufs",
            "Data": null
        },
        "Mounts": [],
        "Config": {
            "Hostname": "fe59f5cce397",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            ],
            "Cmd": [
                "/bin/sh",
                "-c",
                "httpd -D FOREGROUND"
            ],
            "ArgsEscaped": true,
            "Image": "al-ap:6",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {}
        },
        "NetworkSettings": {
            "Bridge": "",
            "SandboxID": "e43ff9d813aeee9122c10bbb1d367ad237d47a5412918a3fd1e29e3f4b8f9079",
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "Ports": {},
            "SandboxKey": "/var/run/docker/netns/e43ff9d813ae",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "efc8e252382ebcc0f41a57834e4d2a49d9b5afa84abfbd152beae75856332812",
            "Gateway": "172.17.0.1",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "172.17.0.2",
            "IPPrefixLen": 16,
            "IPv6Gateway": "",
            "MacAddress": "02:42:ac:11:00:02",
            "Networks": {
                "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "NetworkID": "55fb23da4021d17ac856a358fa7f11f88aef66e07627af806292b606574781cb",
                    "EndpointID": "efc8e252382ebcc0f41a57834e4d2a49d9b5afa84abfbd152beae75856332812",
                    "Gateway": "172.17.0.1",
                    "IPAddress": "172.17.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "MacAddress": "02:42:ac:11:00:02"
                }
            }
        }
    }
]
root@dockertest:/var/lib/docker/image# docker container inspect w1 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "172.17.0.2",
                    "IPAddress": "172.17.0.2",
root@dockertest:/var/lib/docker/image# docker container inspect w2 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "172.17.0.3",
                    "IPAddress": "172.17.0.3",
root@dockertest:/var/lib/docker/image# docker container inspect db | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "172.17.0.4",
                    "IPAddress": "172.17.0.4",
root@dockertest:/var/lib/docker/image# docker network create w1-db-net
d36dacd96d98cdd8b3febe520ca89ce15df644d0f02007fa4a9f260a8caddf0f
root@dockertest:/var/lib/docker/image# docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
55fb23da4021        bridge              bridge              local
b2ce3f25e09d        docker_gwbridge     bridge              local
fdcc61c65ce5        host                host                local
aea69c2b699b        none                null                local
d36dacd96d98        w1-db-net           bridge              local
root@dockertest:/var/lib/docker/image# docker network inspect w1-db-net
[
    {
        "Name": "w1-db-net",
        "Id": "d36dacd96d98cdd8b3febe520ca89ce15df644d0f02007fa4a9f260a8caddf0f",
        "Created": "2020-03-26T03:40:42.020870449Z",
        "Scope": "local",
        "Driver": "bridge",
        "EnableIPv6": false,
        "IPAM": {
            "Driver": "default",
            "Options": {},
            "Config": [
                {
                    "Subnet": "172.19.0.0/16",
                    "Gateway": "172.19.0.1"
                }
            ]
        },
        "Internal": false,
        "Attachable": false,
        "Containers": {},
        "Options": {},
        "Labels": {}
    }
]
root@dockertest:/var/lib/docker/image# docker network disconnect bridge w1
root@dockertest:/var/lib/docker/image# docker network connect w1-db-net w1
root@dockertest:/var/lib/docker/image# docker container inspect w1 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.19.0.2",
root@dockertest:/var/lib/docker/image# docker container exec w1 ping -c2 172.17.0.4
PING 172.17.0.4 (172.17.0.4): 56 data bytes
^Z
[1]+  Stopped                 docker container exec w1 ping -c2 172.17.0.4
root@dockertest:/var/lib/docker/image# docker network disconnect bridge db
root@dockertest:/var/lib/docker/image# docker network connect w1-db-net db
root@dockertest:/var/lib/docker/image# docker container inspect db | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.19.0.3",
root@dockertest:/var/lib/docker/image# docker container exec w1 ping -c2 "172.19.0.3"
PING 172.19.0.3 (172.19.0.3): 56 data bytes
64 bytes from 172.19.0.3: seq=0 ttl=64 time=0.188 ms
64 bytes from 172.19.0.3: seq=1 ttl=64 time=0.073 ms

--- 172.19.0.3 ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.073/0.130/0.188 ms
root@dockertest:/var/lib/docker/image# docker network inspect w2-db-net
[]
Error: No such network: w2-db-net
root@dockertest:/var/lib/docker/image# docker network create w2-db-net
c3717554c2705290d335279ff61e035828121aeb6a633860406cd0d3065548c5
root@dockertest:/var/lib/docker/image# docker network disconnect bridge w2
root@dockertest:/var/lib/docker/image# docker network connect w2-db-net w2
root@dockertest:/var/lib/docker/image# docker container inspect w2 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.20.0.2",
root@dockertest:/var/lib/docker/image# docker network inspect w2-db-net
[
    {
        "Name": "w2-db-net",
        "Id": "c3717554c2705290d335279ff61e035828121aeb6a633860406cd0d3065548c5",
        "Created": "2020-03-26T03:44:42.547895856Z",
        "Scope": "local",
        "Driver": "bridge",
        "EnableIPv6": false,
        "IPAM": {
            "Driver": "default",
            "Options": {},
            "Config": [
                {
                    "Subnet": "172.20.0.0/16",
                    "Gateway": "172.20.0.1"
                }
            ]
        },
        "Internal": false,
        "Attachable": false,
        "Containers": {
            "5bade59b87c1d71b3094042c817ec4288a5ffff14a0a710ff545c81d4a5cea3b": {
                "Name": "w2",
                "EndpointID": "fce0bdbca9c789fe25552f19b25775a074e73bb07c6b6ab46d9cb22bed927b8a",
                "MacAddress": "02:42:ac:14:00:02",
                "IPv4Address": "172.20.0.2/16",
                "IPv6Address": ""
            }
        },
        "Options": {},
        "Labels": {}
    }
]
root@dockertest:/var/lib/docker/image# docker container inspect db | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.19.0.3",
root@dockertest:/var/lib/docker/image# docker network connect w2-db-net db
root@dockertest:/var/lib/docker/image# docker container inspect db | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.19.0.3",
                    "IPAddress": "172.20.0.3",
root@dockertest:/var/lib/docker/image# "172.20.0.3"
bash: 172.20.0.3: command not found
root@dockertest:/var/lib/docker/image#
root@dockertest:/var/lib/docker/image#
root@dockertest:/var/lib/docker/image#
root@dockertest:/var/lib/docker/image#
root@dockertest:/var/lib/docker/image#
root@dockertest:/var/lib/docker/image#
root@dockertest:/var/lib/docker/image# docker container inspect w1 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.19.0.2",
root@dockertest:/var/lib/docker/image# docker container inspect db | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.19.0.3",
                    "IPAddress": "172.20.0.3",
root@dockertest:/var/lib/docker/image# docker container inspect w2 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.20.0.2",
root@dockertest:/var/lib/docker/image# docker container exec w1 ping -c2 "172.19.0.3"
PING 172.19.0.3 (172.19.0.3): 56 data bytes
64 bytes from 172.19.0.3: seq=0 ttl=64 time=0.139 ms
64 bytes from 172.19.0.3: seq=1 ttl=64 time=0.107 ms

--- 172.19.0.3 ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.107/0.123/0.139 ms
root@dockertest:/var/lib/docker/image# docker container exec w1 ping -c2 db
PING db (172.19.0.3): 56 data bytes
64 bytes from 172.19.0.3: seq=0 ttl=64 time=0.057 ms
64 bytes from 172.19.0.3: seq=1 ttl=64 time=0.072 ms

--- db ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.057/0.064/0.072 ms
root@dockertest:/var/lib/docker/image# docker container exec w2 ping -c2 db
PING db (172.20.0.3): 56 data bytes
64 bytes from 172.20.0.3: seq=0 ttl=64 time=0.091 ms
64 bytes from 172.20.0.3: seq=1 ttl=64 time=0.133 ms

--- db ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.091/0.112/0.133 ms
root@dockertest:/var/lib/docker/image# docker container exec w2 ping -c2 w1
ping: bad address 'w1'
root@dockertest:/var/lib/docker/image#



--------------------------------------------------------------------------------------------------------------------------------


root@dockertest:/var/lib/docker/image# docker container run -d --network w1-db-net --name w3 al-ap:6
809b55059f94e929aac48630a09b2c31c8b44b4237b8851d83d028039ebca3b8
root@dockertest:/var/lib/docker/image# docker container inspect w6 | grep -i ipaddress
Error: No such container: w6
root@dockertest:/var/lib/docker/image# docker container inspect w3 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.19.0.4",
root@dockertest:/var/lib/docker/image# docker container run -d --network w1-db-net --ipaddress 172.19.0.5 --name w4 al-ap:6
unknown flag: --ipaddress
See 'docker container run --help'.
root@dockertest:/var/lib/docker/image# docker container run --help | grep -i ip
      --add-host list                         Add a custom host-to-IP mapping (host:ip) (default [])
      --disable-content-trust                 Skip image verification (default true)
      --ip string                             Container IPv4 address (e.g. 172.30.100.104)
      --ip6 string                            Container IPv6 address (e.g. 2001:db8::33)
      --ipc string                            IPC namespace to use
      --link-local-ip list                    Container IPv4/IPv6 link-local addresses (default [])
root@dockertest:/var/lib/docker/image# docker container run -d --network w1-db-net --ip 172.19.0.5 --name w4 al-ap:6
11edf4d4819b81319db7cf0b4e613521e2cfc210c94c4c10b1e5cbef5c8d8179
docker: Error response from daemon: User specified IP address is supported only when connecting to networks with user configured subnets.
root@dockertest:/var/lib/docker/image# docker network create --subnet 172.21.0.0/16 --gateway 172.21.0.1 myownnet
958e50307891ae8b12491f12ad52d368b5836fe7bba8eed8d329c32f28a9273f
root@dockertest:/var/lib/docker/image# docker network inspect myownnet
[
    {
        "Name": "myownnet",
        "Id": "958e50307891ae8b12491f12ad52d368b5836fe7bba8eed8d329c32f28a9273f",
        "Created": "2020-03-26T04:06:01.185137372Z",
        "Scope": "local",
        "Driver": "bridge",
        "EnableIPv6": false,
        "IPAM": {
            "Driver": "default",
            "Options": {},
            "Config": [
                {
                    "Subnet": "172.21.0.0/16",
                    "Gateway": "172.21.0.1"
                }
            ]
        },
        "Internal": false,
        "Attachable": false,
        "Containers": {},
        "Options": {},
        "Labels": {}
    }
]
root@dockertest:/var/lib/docker/image# docker container run -d --network myownnet --ip 172.21.0.5 --name w5 al-ap:6
7f48aca4ff809a4fe807b615cc6d232452965fc354f3a33bcf9f86d726229160
root@dockertest:/var/lib/docker/image# docker container inspect w5 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.21.0.5",
root@dockertest:/var/lib/docker/image# docket network ls
bash: docket: command not found
root@dockertest:/var/lib/docker/image# docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
55fb23da4021        bridge              bridge              local
b2ce3f25e09d        docker_gwbridge     bridge              local
fdcc61c65ce5        host                host                local
958e50307891        myownnet            bridge              local
aea69c2b699b        none                null                local
d36dacd96d98        w1-db-net           bridge              local
c3717554c270        w2-db-net           bridge              local
root@dockertest:/var/lib/docker/image# docker image pull ghost:1-alpine
1-alpine: Pulling from library/ghost
Digest: sha256:d017a3d1758f11cfe649d2fcc77afbd855f5e838601a0378085174651a096c7c
Status: Image is up to date for ghost:1-alpine
root@dockertest:/var/lib/docker/image# docker image history ghost:1-alpine
IMAGE               CREATED             CREATED BY                                      SIZE                COMMENT
4e080fef0501        2 days ago          /bin/sh -c #(nop)  CMD ["node" "current/in...   0 B
<missing>           2 days ago          /bin/sh -c #(nop)  EXPOSE 2368                  0 B
<missing>           2 days ago          /bin/sh -c #(nop)  ENTRYPOINT ["docker-ent...   0 B
<missing>           2 days ago          /bin/sh -c #(nop) COPY file:f1f79dab1b0ea9...   678 B
<missing>           2 days ago          /bin/sh -c #(nop)  VOLUME [/var/lib/ghost/...   0 B
<missing>           2 days ago          /bin/sh -c #(nop) WORKDIR /var/lib/ghost        0 B
<missing>           2 days ago          /bin/sh -c #(nop)  ENV PATH=/usr/local/sbi...   0 B
<missing>           2 days ago          /bin/sh -c set -eux;  mkdir -p "$GHOST_INS...   156 MB
<missing>           2 days ago          /bin/sh -c #(nop)  ENV GHOST_VERSION=1.26.2     0 B
<missing>           2 days ago          /bin/sh -c #(nop)  ENV GHOST_CONTENT=/var/...   0 B
<missing>           2 days ago          /bin/sh -c #(nop)  ENV GHOST_INSTALL=/var/...   0 B
<missing>           2 days ago          /bin/sh -c set -eux;  npm install -g "ghos...   27.2 MB
<missing>           2 days ago          /bin/sh -c #(nop)  ENV GHOST_CLI_VERSION=1...   0 B
<missing>           2 days ago          /bin/sh -c #(nop)  ENV NODE_ENV=production      0 B
<missing>           2 days ago          /bin/sh -c apk add --no-cache   bash            2 MB
<missing>           2 days ago          /bin/sh -c apk add --no-cache 'su-exec>=0.2'    37.6 kB
<missing>           2 days ago          /bin/sh -c #(nop)  CMD ["node"]                 0 B
<missing>           2 days ago          /bin/sh -c #(nop)  ENTRYPOINT ["docker-ent...   0 B
<missing>           2 days ago          /bin/sh -c #(nop) COPY file:238737301d4730...   116 B
<missing>           2 days ago          /bin/sh -c apk add --no-cache --virtual .b...   8.33 MB
<missing>           2 days ago          /bin/sh -c #(nop)  ENV YARN_VERSION=1.21.1      0 B
<missing>           2 days ago          /bin/sh -c addgroup -g 1000 node     && ad...   69.6 MB
<missing>           2 days ago          /bin/sh -c #(nop)  ENV NODE_VERSION=10.19.0     0 B
<missing>           2 days ago          /bin/sh -c #(nop)  CMD ["/bin/sh"]              0 B
<missing>           2 days ago          /bin/sh -c #(nop) ADD file:0c4555f363c2672...   5.6 MB
root@dockertest:/var/lib/docker/image#
root@dockertest:/var/lib/docker/image# cd
root@dockertest:~# cd /home/vagrant
root@dockertest:/home/vagrant# vi pinger/Dockerfile
root@dockertest:/home/vagrant# docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
55fb23da4021        bridge              bridge              local
b2ce3f25e09d        docker_gwbridge     bridge              local
fdcc61c65ce5        host                host                local
958e50307891        myownnet            bridge              local
aea69c2b699b        none                null                local
d36dacd96d98        w1-db-net           bridge              local
c3717554c270        w2-db-net           bridge              local
root@dockertest:/home/vagrant# docker network rm w1-db-net w2-db-net myownnet
Error response from daemon: network w1-db-net has active endpoints
Error response from daemon: network w2-db-net has active endpoints
Error response from daemon: network myownnet has active endpoints
root@dockertest:/home/vagrant# docker container rm -f `docker container ls -a | cut -f 1 -d " "`
7f48aca4ff80
11edf4d4819b
809b55059f94
7c35300f6818
5bade59b87c1
fe59f5cce397
Error response from daemon: No such container: CONTAINER
root@dockertest:/home/vagrant# docker network rm w1-db-net w2-db-net myownnet
w1-db-net
w2-db-net
myownnet
root@dockertest:/home/vagrant# docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
55fb23da4021        bridge              bridge              local
b2ce3f25e09d        docker_gwbridge     bridge              local
fdcc61c65ce5        host                host                local
aea69c2b699b        none                null                local
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# docker network create ghost-net
ef618c3ed05de3568f0c112e372574382947aace88a106ce1c1501bb5a1dff90
root@dockertest:/home/vagrant# docker container run -d --network ghost-net --name ghost-db -e MYSQL_ROOT_PASSWORD=welcome -v /tmp/blogdata:/var/lib/mysql mysql:5.7
ac071bb9540fe5065ea5b9d8b64c2633695497d0c560515b1a2ced5c7dce2d09
root@dockertest:/home/vagrant# docker container run -d --network ghost-net --name ghost-blog -p 9898:2368 -e database__client=mysql -e database__connection__host=ghost-db -e database__connection__user=root -e database__connection__password=welcome -e database__connection__database=ghost ghost:1-alpine
83ee7ef181eded2b737d1d9268c52c6da1b465f14e9bd17b6a003976c93be178
root@dockertest:/home/vagrant#














----------------------------------------------------------------------------------------------------------------------------


root@dockertest:/home/vagrant# docker swarm init
Error response from daemon: could not choose an IP address to advertise since this system has multiple addresses on different interfaces (10.0.2.15 on eth0 and 192.167.10.75 on eth1) - specify one with --advertise-addr
root@dockertest:/home/vagrant# docker swarm init --advertise-addr 192.167.10.75
Swarm initialized: current node (xk7jutl6chde21d0o2vq005hw) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join \
    --token SWMTKN-1-657kh9eiydrsaewdmsq2btsii61735ronl4phse39n15wuq76q-dcweu857wfxg1030witjr8xqo \
    192.167.10.75:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

root@dockertest:/home/vagrant# docker node ls
ID                           HOSTNAME    STATUS  AVAILABILITY  MANAGER STATUS
xk7jutl6chde21d0o2vq005hw *  dockertest  Ready   Active        Leader
root@dockertest:/home/vagrant# docker swarm join-token manager
To add a manager to this swarm, run the following command:

    docker swarm join \
    --token SWMTKN-1-657kh9eiydrsaewdmsq2btsii61735ronl4phse39n15wuq76q-2l86pbtk0h5sgbr4jlaal31kn \
    192.167.10.75:2377

root@dockertest:/home/vagrant# ^C
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# #docker service create -pal-ap:6
root@dockertest:/home/vagrant# docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
83ee7ef181ed        ghost:1-alpine      "docker-entrypoint..."   2 hours ago         Up 2 hours          0.0.0.0:9898->2368/tcp   ghost-blog
ac071bb9540f        mysql:5.7           "docker-entrypoint..."   2 hours ago         Up 2 hours          3306/tcp, 33060/tcp      ghost-db
root@dockertest:/home/vagrant# docker container rm -f `docker container ls -a | cut -f 1 -d " "`
83ee7ef181ed
ac071bb9540f
Error response from daemon: No such container: CONTAINER
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant# docker service create -d -p 9898:80 al-ap:6
unknown shorthand flag: 'd' in -d
See 'docker service create --help'.
root@dockertest:/home/vagrant# docker service create -p 9898:80 al-ap:6
unable to pin image al-ap:6 to digest: errors:
denied: requested access to the resource is denied
unauthorized: authentication required

6czm8ylbxra7435nmca0svrup
root@dockertest:/home/vagrant# docker service create -p 9898:80 alpine ping google.com
Error response from daemon: rpc error: code = 3 desc = port '9898' is already in use by service 'elastic_tesla' (6czm8ylbxra7435nmca0svrup)
root@dockertest:/home/vagrant# docker service rm 6czm8ylbxra7435nmca0svrup
6czm8ylbxra7435nmca0svrup
root@dockertest:/home/vagrant# docker service create -p 9898:80 alpine ping google.com
ol28gg5c6wrexk57lnp4n44tc
root@dockertest:/home/vagrant# docker service ls
ID            NAME            MODE        REPLICAS  IMAGE
ol28gg5c6wre  vigilant_elion  replicated  1/1       alpine:latest
root@dockertest:/home/vagrant# docker service ol28gg5c6wre ps

Usage:  docker service COMMAND

Manage services

Options:
      --help   Print usage

Commands:
  create      Create a new service
  inspect     Display detailed information on one or more services
  logs        Fetch the logs of a service
  ls          List services
  ps          List the tasks of a service
  rm          Remove one or more services
  scale       Scale one or multiple replicated services
  update      Update a service

Run 'docker service COMMAND --help' for more information on a command.
root@dockertest:/home/vagrant# docker service ps ol28gg5c6wre
ID            NAME              IMAGE          NODE        DESIRED STATE  CURRENT STATE               ERROR  PORTS
647pm95ddjeb  vigilant_elion.1  alpine:latest  dockertest  Running        Running about a minute ago
root@dockertest:/home/vagrant# docker container ls
CONTAINER ID        IMAGE                                                                            COMMAND             CREATED              STATUS              PORTS               NAMES
32ea1a57f2fe        alpine@sha256:b276d875eeed9c7d3f1cfa7edb06b22ed22b14219a7d67c52c56612330348239   "ping google.com"   About a minute ago   Up About a minute                       vigilant_elion.1.647pm95ddjebjcabv7f9nwdyf
root@dockertest:/home/vagrant# docker service update --replicas 5 ol28gg5c6wre
ol28gg5c6wre
root@dockertest:/home/vagrant# docker service ls
ID            NAME            MODE        REPLICAS  IMAGE
ol28gg5c6wre  vigilant_elion  replicated  5/5       alpine:latest
root@dockertest:/home/vagrant# docker service update --replicas 3 ol28gg5c6wre
ol28gg5c6wre
root@dockertest:/home/vagrant# docker service ls
ID            NAME            MODE        REPLICAS  IMAGE
ol28gg5c6wre  vigilant_elion  replicated  3/3       alpine:latest
root@dockertest:/home/vagrant# docker service ps ol28gg5c6wre
ID            NAME              IMAGE          NODE        DESIRED STATE  CURRENT STATE           ERROR  PORTS
647pm95ddjeb  vigilant_elion.1  alpine:latest  dockertest  Running        Running 4 minutes ago
3ft66j0w3t3z  vigilant_elion.3  alpine:latest  dockertest  Running        Running 58 seconds ago
jjhjk6wr517r  vigilant_elion.5  alpine:latest  dockertest  Running        Running 58 seconds ago
root@dockertest:/home/vagrant# docker container ls
CONTAINER ID        IMAGE                                                                            COMMAND             CREATED              STATUS              PORTS               NAMES
d8b074d4259f        alpine@sha256:b276d875eeed9c7d3f1cfa7edb06b22ed22b14219a7d67c52c56612330348239   "ping google.com"   About a minute ago   Up About a minute                       vigilant_elion.3.3ft66j0w3t3zlh4t8jxhdhrvz
68fbd96e65a4        alpine@sha256:b276d875eeed9c7d3f1cfa7edb06b22ed22b14219a7d67c52c56612330348239   "ping google.com"   About a minute ago   Up About a minute                       vigilant_elion.5.jjhjk6wr517rgckum2ba9oxe2
32ea1a57f2fe        alpine@sha256:b276d875eeed9c7d3f1cfa7edb06b22ed22b14219a7d67c52c56612330348239   "ping google.com"   5 minutes ago        Up 5 minutes                            vigilant_elion.1.647pm95ddjebjcabv7f9nwdyf
root@dockertest:/home/vagrant# docker container rm -f d8b074d4259f
d8b074d4259f
root@dockertest:/home/vagrant# docker service ps ol28gg5c6wre
ID            NAME                  IMAGE          NODE        DESIRED STATE  CURRENT STATE          ERROR                        PORTS
647pm95ddjeb  vigilant_elion.1      alpine:latest  dockertest  Running        Running 6 minutes ago
56zpojx67hnb  vigilant_elion.3      alpine:latest  dockertest  Ready          Ready 3 seconds ago
3ft66j0w3t3z   \_ vigilant_elion.3  alpine:latest  dockertest  Shutdown       Failed 3 seconds ago   "task: non-zero exit (137)"
jjhjk6wr517r  vigilant_elion.5      alpine:latest  dockertest  Running        Running 2 minutes ago
root@dockertest:/home/vagrant# docker container ls
CONTAINER ID        IMAGE                                                                            COMMAND             CREATED             STATUS              PORTS               NAMES
fea95b4ef72e        alpine@sha256:b276d875eeed9c7d3f1cfa7edb06b22ed22b14219a7d67c52c56612330348239   "ping google.com"   30 seconds ago      Up 23 seconds                           vigilant_elion.3.56zpojx67hnbjqv6ww4hcdbiz
68fbd96e65a4        alpine@sha256:b276d875eeed9c7d3f1cfa7edb06b22ed22b14219a7d67c52c56612330348239   "ping google.com"   2 minutes ago       Up 2 minutes                            vigilant_elion.5.jjhjk6wr517rgckum2ba9oxe2
32ea1a57f2fe        alpine@sha256:b276d875eeed9c7d3f1cfa7edb06b22ed22b14219a7d67c52c56612330348239   "ping google.com"   6 minutes ago       Up 6 minutes                            vigilant_elion.1.647pm95ddjebjcabv7f9nwdyf
root@dockertest:/home/vagrant# docker service create -p 9999:80 nginx
ezajtul3aa9m1egd7q0sniat6
root@dockertest:/home/vagrant# docker service ls
ID            NAME            MODE        REPLICAS  IMAGE
ezajtul3aa9m  sleepy_panini   replicated  1/1       nginx:latest
ol28gg5c6wre  vigilant_elion  replicated  3/3       alpine:latest
root@dockertest:/home/vagrant# docker service update --replicas 3 ezajtul3aa9m
ezajtul3aa9m
root@dockertest:/home/vagrant# docker service ls
ID            NAME            MODE        REPLICAS  IMAGE
ezajtul3aa9m  sleepy_panini   replicated  3/3       nginx:latest
ol28gg5c6wre  vigilant_elion  replicated  3/3       alpine:latest
root@dockertest:/home/vagrant# docker container ls
CONTAINER ID        IMAGE                                                                            COMMAND                  CREATED             STATUS              PORTS               NAMES
01599b3fc79e        nginx@sha256:2539d4344dd18e1df02be842ffc435f8e1f699cfc55516e2cf2cb16b7a9aea0b    "nginx -g 'daemon ..."   25 seconds ago      Up 24 seconds       80/tcp              sleepy_panini.2.kvo7dbxcxnlowq0ynx5bqkvbk
5b83c6fc5cc2        nginx@sha256:2539d4344dd18e1df02be842ffc435f8e1f699cfc55516e2cf2cb16b7a9aea0b    "nginx -g 'daemon ..."   25 seconds ago      Up 24 seconds       80/tcp              sleepy_panini.3.c25tk2u5neo0zyn2itvaw94x9
9f8ed9a510f0        nginx@sha256:2539d4344dd18e1df02be842ffc435f8e1f699cfc55516e2cf2cb16b7a9aea0b    "nginx -g 'daemon ..."   59 seconds ago      Up 58 seconds       80/tcp              sleepy_panini.1.vzstgb9ythgjwy18683hrd4n8
fea95b4ef72e        alpine@sha256:b276d875eeed9c7d3f1cfa7edb06b22ed22b14219a7d67c52c56612330348239   "ping google.com"        4 minutes ago       Up 3 minutes                            vigilant_elion.3.56zpojx67hnbjqv6ww4hcdbiz
68fbd96e65a4        alpine@sha256:b276d875eeed9c7d3f1cfa7edb06b22ed22b14219a7d67c52c56612330348239   "ping google.com"        6 minutes ago       Up 6 minutes                            vigilant_elion.5.jjhjk6wr517rgckum2ba9oxe2
32ea1a57f2fe        alpine@sha256:b276d875eeed9c7d3f1cfa7edb06b22ed22b14219a7d67c52c56612330348239   "ping google.com"        10 minutes ago      Up 10 minutes                           vigilant_elion.1.647pm95ddjebjcabv7f9nwdyf
root@dockertest:/home/vagrant# docker service update --image nginx:alpine ezajtul3aa9m
ezajtul3aa9m
root@dockertest:/home/vagrant# docker service ls
ID            NAME            MODE        REPLICAS  IMAGE
ezajtul3aa9m  sleepy_panini   replicated  2/3       nginx:alpine
ol28gg5c6wre  vigilant_elion  replicated  3/3       alpine:latest
root@dockertest:/home/vagrant# docker service ls
ID            NAME            MODE        REPLICAS  IMAGE
ezajtul3aa9m  sleepy_panini   replicated  2/3       nginx:alpine
ol28gg5c6wre  vigilant_elion  replicated  3/3       alpine:latest
root@dockertest:/home/vagrant# docker service ls
ID            NAME            MODE        REPLICAS  IMAGE
ezajtul3aa9m  sleepy_panini   replicated  2/3       nginx:alpine
ol28gg5c6wre  vigilant_elion  replicated  3/3       alpine:latest
root@dockertest:/home/vagrant# docker serive ps ezajtul3aa9m
docker: 'serive' is not a docker command.
See 'docker --help'
root@dockertest:/home/vagrant# docker serivce ps ezajtul3aa9m
docker: 'serivce' is not a docker command.
See 'docker --help'
root@dockertest:/home/vagrant# docker service ps ezajtul3aa9m
ID            NAME                 IMAGE         NODE        DESIRED STATE  CURRENT STATE            ERROR  PORTS
iqzdjm7nv0gu  sleepy_panini.1      nginx:alpine  dockertest  Running        Running 21 seconds ago
vzstgb9ythgj   \_ sleepy_panini.1  nginx:latest  dockertest  Shutdown       Shutdown 22 seconds ago
m7cbz5hxhbb8  sleepy_panini.2      nginx:alpine  dockertest  Running        Running 23 seconds ago
kvo7dbxcxnlo   \_ sleepy_panini.2  nginx:latest  dockertest  Shutdown       Shutdown 24 seconds ago
h7b72vynmla0  sleepy_panini.3      nginx:alpine  dockertest  Running        Running 26 seconds ago
c25tk2u5neo0   \_ sleepy_panini.3  nginx:latest  dockertest  Shutdown       Shutdown 37 seconds ago
root@dockertest:/home/vagrant# docker service ls
ID            NAME            MODE        REPLICAS  IMAGE
ezajtul3aa9m  sleepy_panini   replicated  3/3       nginx:alpine
ol28gg5c6wre  vigilant_elion  replicated  3/3       alpine:latest
root@dockertest:/home/vagrant# docker service update --help

Usage:  docker service update [OPTIONS] SERVICE

Update a service

Options:
      --args string                      Service command args
      --constraint-add list              Add or update a placement constraint (default [])
      --constraint-rm list               Remove a constraint (default [])
      --container-label-add list         Add or update a container label (default [])
      --container-label-rm list          Remove a container label by its key (default [])
      --dns-add list                     Add or update a custom DNS server (default [])
      --dns-option-add list              Add or update a DNS option (default [])
      --dns-option-rm list               Remove a DNS option (default [])
      --dns-rm list                      Remove a custom DNS server (default [])
      --dns-search-add list              Add or update a custom DNS search domain (default [])
      --dns-search-rm list               Remove a DNS search domain (default [])
      --endpoint-mode string             Endpoint mode (vip or dnsrr)
      --env-add list                     Add or update an environment variable (default [])
      --env-rm list                      Remove an environment variable (default [])
      --force                            Force update even if no changes require it
      --group-add list                   Add an additional supplementary user group to the container (default [])
      --group-rm list                    Remove a previously added supplementary user group from the container (default [])
      --health-cmd string                Command to run to check health
      --health-interval duration         Time between running the check (ns|us|ms|s|m|h)
      --health-retries int               Consecutive failures needed to report unhealthy
      --health-timeout duration          Maximum time to allow one check to run (ns|us|ms|s|m|h)
      --help                             Print usage
      --host-add list                    Add or update a custom host-to-IP mapping (host:ip) (default [])
      --host-rm list                     Remove a custom host-to-IP mapping (host:ip) (default [])
      --hostname string                  Container hostname
      --image string                     Service image tag
      --label-add list                   Add or update a service label (default [])
      --label-rm list                    Remove a label by its key (default [])
      --limit-cpu decimal                Limit CPUs (default 0.000)
      --limit-memory bytes               Limit Memory (default 0 B)
      --log-driver string                Logging driver for service
      --log-opt list                     Logging driver options (default [])
      --mount-add mount                  Add or update a mount on a service
      --mount-rm list                    Remove a mount by its target path (default [])
      --no-healthcheck                   Disable any container-specified HEALTHCHECK
      --publish-add port                 Add or update a published port
      --publish-rm port                  Remove a published port by its target port
      --replicas uint                    Number of tasks
      --reserve-cpu decimal              Reserve CPUs (default 0.000)
      --reserve-memory bytes             Reserve Memory (default 0 B)
      --restart-condition string         Restart when condition is met (none, on-failure, or any)
      --restart-delay duration           Delay between restart attempts (ns|us|ms|s|m|h)
      --restart-max-attempts uint        Maximum number of restarts before giving up
      --restart-window duration          Window used to evaluate the restart policy (ns|us|ms|s|m|h)
      --rollback                         Rollback to previous specification
      --secret-add secret                Add or update a secret on a service
      --secret-rm list                   Remove a secret (default [])
      --stop-grace-period duration       Time to wait before force killing a container (ns|us|ms|s|m|h)
  -t, --tty                              Allocate a pseudo-TTY
      --update-delay duration            Delay between updates (ns|us|ms|s|m|h) (default 0s)
      --update-failure-action string     Action on update failure (pause|continue) (default "pause")
      --update-max-failure-ratio float   Failure rate to tolerate during an update
      --update-monitor duration          Duration after each task update to monitor for failure (ns|us|ms|s|m|h) (default 0s)
      --update-parallelism uint          Maximum number of tasks updated simultaneously (0 to update all at once) (default 1)
  -u, --user string                      Username or UID (format: <name|uid>[:<group|gid>])
      --with-registry-auth               Send registry authentication details to swarm agents
  -w, --workdir string                   Working directory inside the container
root@dockertest:/home/vagrant#
root@dockertest:/home/vagrant#
